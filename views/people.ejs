<%- include("./partials/header", {title: "Job Detail"}) %>

<section class="py-12 sm:py-16 relative">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div
      class="error-container hidden absolute px-2 py-1 rounded w-[400px] left-2/4 -ml-[200px] bg-red-600 border-red-600 border-2"
    >
      <div class="relative">
        <p class="error-msg text-white"></p>
        <button
          class="close-btn absolute -top-2 -right-2 bg-black text-white text-xs px-1 pb-[2px]"
        >
          Close [x]
        </button>
      </div>
    </div>
    <h1 class="text-3xl font-bold text-white sm:text-4xl lg:text-5xl">
      People
    </h1>
    <p class="mt-2 text-gray-300">Some of the recently created profiles.</p>

    <% if (locals.userId) { %>
    <div
      class="max-w-4xl bg-gray-800 border-[1px] border-gray-700 rounded p-4 mt-8 text-gray-100"
    >
      <h3
        class="font-semibold border-b-[1px] border-gray-500 pb-2 text-gray-300"
      >
        Friend Requests
      </h3>

      <% if (reqsReceived.length === 0) { %>
      <p class="pt-3 max-w-3xl">
        You haven't received any friend requests yet, please check back later.
      </p>
      <% } else { %>
      <ul class="max-w-4xl mt-6">
        <% reqsReceived.forEach(req => { %>
        <li
          class="my-3 border-2 border-gray-700 bg-gray-800 rounded shadow-sm w-full px-5 py-2 flex flex-col sm:flex-row sm:items-center justify-between"
        >
          <div>
            <h3 class="text-lg font-semibold text-gray-100 underline">
              <a href="/social/people/<%= req.requesterId %>">
                <%= req.requester.name %>
              </a>
            </h3>
            <p class="text-sm text-gray-300 break-words my-1">
              <%= req.requester.bio.substring(0, 100) %>...
            </p>
          </div>

          <div class="sm:ml-2 flex flex-row">
            <button
              class="btn-accept btn-primary text-sm rounded px-3 py-1 mr-2"
              data-id="<%= req.id %>"
              data-req-id="<%= req.requesterId%>"
            >
              Accept Request
            </button>
            <button
              class="btn-delete btn-outline text-red-600 border-red-600 hover:bg-red-500 hover:border-white text-sm rounded px-3 py-1"
              data-id="<%= req.id %>"
            >
              Delete Request
            </button>
          </div>
        </li>
        <% }) %>
      </ul>
      <% } %>
    </div>
    <% } %> <% if (people.length === 0) { %>
    <p class="text-lg text-gray-300 text-center mt-5">
      No profiles for now, please check back later.
    </p>
    <% } else { %>
    <ul class="max-w-4xl mt-6">
      <% people.forEach(person => { %>
      <li
        class="my-3 border-2 border-gray-700 bg-gray-800 rounded shadow-sm w-full px-5 py-2 flex flex-col sm:flex-row sm:items-center justify-between"
      >
        <div>
          <h3 class="text-lg font-semibold text-gray-100 underline">
            <a href="/social/people/<%= person.id %>"> <%= person.name %> </a>
          </h3>
          <p class="text-sm text-gray-300 break-words my-1">
            <%= person.bio.substring(0, 100) %>...
          </p>

          <div class="mt-2">
            <% if (locals.userId) { %> <% if (friends.includes(person.id)) { %>
            <button
              class="inline-flex items-center btn-primary border-white border-[1px] text-sm rounded px-3 py-1 mr-2 opacity-75 bg-transparent pointer-events-none"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="w-4 h-4 mr-2"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
                />
              </svg>

              <span class="">Friend</span>
            </button>
            <% } else if (pendingReqsIds.includes(person.id)) { %>
            <button
              class="inline-flex items-center bg-blue-400 btn-primary text-sm rounded px-3 py-1 mr-2 opacity-75 pointer-events-none"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="lime"
                class="w-4 h-4 mr-2"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
                />
              </svg>
              <span>Request Sent</span>
            </button>
            <% } else { %>
            <form
              method="post"
              action="/social/people/friend"
              class="inline reqForm"
            >
              <input
                type="text"
                hidden
                value="<%= person.id %>"
                name="personId"
              />
              <button
                class="inline-flex items-center btn-primary text-sm rounded px-3 py-1 mr-2 disabled:bg-blue-400"
                type="submit"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-4 h-4 mr-2"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M18 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 1 1-6.75 0 3.375 3.375 0 0 1 6.75 0ZM3 19.235v-.11a6.375 6.375 0 0 1 12.75 0v.109A12.318 12.318 0 0 1 9.374 21c-2.331 0-4.512-.645-6.374-1.766Z"
                  />
                </svg>
                <span>Add Friend</span>
              </button>
            </form>
            <% } %> <% } %>
            <a
              href="/social/people/<%= person.id %>"
              class="underline font-bold text-golden text-sm"
              >View Profile</a
            >
          </div>
        </div>
      </li>
      <% }) %>
    </ul>
    <% } %>
  </div>
</section>

<script>
  const forms = document.querySelectorAll(".reqForm");
  forms.forEach((f) => f.addEventListener("submit", handleSubmit));

  async function handleSubmit(event) {
    const form = event.target;
    event.preventDefault();
    const formData = new FormData(form);
    const personId = formData.get("personId");

    try {
      const res = await fetch("/social/people/friend", {
        method: "POST",
        body: JSON.stringify({ personId }),
        headers: {
          "Content-Type": "application/json",
        },
      });
      const json = await res.json();

      if (json.status === "success") {
        const btn = form.querySelector("button");
        btn.innerText = "Request Sent";
        btn.setAttribute("disabled", "");
      } else if (json.status === "error") {
        const errContainer = document.querySelector(".error-container");
        const errMsg = document.querySelector(".error-msg");

        errContainer.style.display = "block";
        errMsg.innerText = json.message;

        const closeBtn = document.querySelector(".close-btn");
        closeBtn.addEventListener("click", () => {
          errMsg.innerText = "";
          errContainer.style.display = "none";
        });
      }
    } catch (e) {
      console.error(e);
    }
  }

  const acceptBtns = document.querySelectorAll(".btn-accept");
  const deleteBtns = document.querySelectorAll(".btn-delete");

  acceptBtns.forEach((btn) => btn.addEventListener("click", acceptRequest));
  deleteBtns.forEach((btn) => btn.addEventListener("click", deleteRequest));

  async function acceptRequest(event) {
    const requestId = event.target.getAttribute("data-id");
    const requesterId = event.target.getAttribute("data-req-id");

    try {
      const res = await fetch("/social/acceptRequest", {
        method: "POST",
        body: JSON.stringify({ requestId, requesterId }),
        headers: {
          "Content-Type": "application/json",
        },
      });
      const json = await res.json();

      if (json.status === "success") {
        // remove the old buttons and add a new disabled button with updated status
        const parentEl = event.target.parentNode;
        const innerBtns = parentEl.querySelectorAll("button");
        innerBtns.forEach((btn) => btn.remove);

        parentEl.innerHTML =
          '<button class="btn-primary text-sm rounded px-3 py-1" disabled>Friend</button>';
      } else if (json.status === "error") {
        const errContainer = document.querySelector(".error-container");
        const errMsg = document.querySelector(".error-msg");

        errContainer.style.display = "block";
        errMsg.innerText = json.message;

        const closeBtn = document.querySelector(".close-btn");
        closeBtn.addEventListener("click", () => {
          errMsg.innerText = "";
          errContainer.style.display = "none";
        });
      }
    } catch (e) {
      console.error(e);
    }
  }

  async function deleteRequest(event) {
    const requestId = event.target.getAttribute("data-id");

    try {
      const res = await fetch("/social/deleteRequest", {
        method: "DELETE",
        body: JSON.stringify({ requestId }),
        headers: {
          "Content-Type": "application/json",
        },
      });
      const json = await res.json();
      if (json.status === "success") {
        // remove the old buttons and add a new disabled button with updated status
        const parentEl = event.target.parentNode;
        const innerBtns = parentEl.querySelectorAll("button");
        innerBtns.forEach((btn) => btn.remove);

        parentEl.innerHTML =
          '<button class="bg-red-500 text-sm text-white rounded px-3 py-1" disabled>Deleted</button>';
      } else if (json.status === "error") {
        const errContainer = document.querySelector(".error-container");
        const errMsg = document.querySelector(".error-msg");

        errContainer.style.display = "block";
        errMsg.innerText = json.message;

        const closeBtn = document.querySelector(".close-btn");
        closeBtn.addEventListener("click", () => {
          errMsg.innerText = "";
          errContainer.style.display = "none";
        });
      }
    } catch (e) {
      console.error(e);
    }
  }
</script>

<%- include("./partials/footer") %>
