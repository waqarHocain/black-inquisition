<%- include("./partials/header", {title: post.title}) %>
<section class="py-12 sm:py-16">
  <div class="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8">
    <h1 class="text-4xl font-bold text-neutral-100 lg:text-5xl max-w-prose">
      <%= post.title %>
    </h1>

    <p class="mt-2 text-neutral-400 text-sm">
      Last Updated: <%= post.updatedAt.toDateString() %>
    </p>
    <article class="post-content text-lg mt-5 text-neutral-300 max-w-prose">
      <%= post.body %>
    </article>

    <% if (locals.userId) { %>
    <div class="mt-5">
      <form
        method="post"
        action="/user/posts/<%= post.id %>/like"
        id="post-like-form"
        class="inline"
      >
        <input type="text" name="postId" value="<%= post.id %>" hidden />
        <button
          type="submit"
          class="<%= isLiked ? 'like-btn-liked' : 'like-btn-normal' %> px-3 py-1 border-[1px] rounded-full text-sm"
        >
          <svg
            width="800px"
            height="800px"
            viewBox="0 0 24 24"
            class="like-icon h-4 w-4 inline mr-1"
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M15.9 4.5C15.9 3 14.418 2 13.26 2c-.806 0-.869.612-.993 1.82-.055.53-.121 1.174-.267 1.93-.386 2.002-1.72 4.56-2.996 5.325V17C9 19.25 9.75 20 13 20h3.773c2.176 0 2.703-1.433 2.899-1.964l.013-.036c.114-.306.358-.547.638-.82.31-.306.664-.653.927-1.18.311-.623.27-1.177.233-1.67-.023-.299-.044-.575.017-.83.064-.27.146-.475.225-.671.143-.356.275-.686.275-1.329 0-1.5-.748-2.498-2.315-2.498H15.5S15.9 6 15.9 4.5zM5.5 10A1.5 1.5 0 0 0 4 11.5v7a1.5 1.5 0 0 0 3 0v-7A1.5 1.5 0 0 0 5.5 10z"
            />
          </svg>
          <span><%= isLiked ? "Liked" : "Like Post" %></span>
        </button>
      </form>

      <p class="inline text-neutral-400 text-sm ml-2">
        <span id="likes-counter"><%= post._count.likes %> </span> <%=
        post._count.likes > 1 ? "likes" : "like" %>
      </p>
    </div>
    <% } else {%>
    <p class="mt-5">
      <svg
        width="800px"
        height="800px"
        viewBox="0 0 24 24"
        class="like-icon h-6 w-6 inline mr-1"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M15.9 4.5C15.9 3 14.418 2 13.26 2c-.806 0-.869.612-.993 1.82-.055.53-.121 1.174-.267 1.93-.386 2.002-1.72 4.56-2.996 5.325V17C9 19.25 9.75 20 13 20h3.773c2.176 0 2.703-1.433 2.899-1.964l.013-.036c.114-.306.358-.547.638-.82.31-.306.664-.653.927-1.18.311-.623.27-1.177.233-1.67-.023-.299-.044-.575.017-.83.064-.27.146-.475.225-.671.143-.356.275-.686.275-1.329 0-1.5-.748-2.498-2.315-2.498H15.5S15.9 6 15.9 4.5zM5.5 10A1.5 1.5 0 0 0 4 11.5v7a1.5 1.5 0 0 0 3 0v-7A1.5 1.5 0 0 0 5.5 10z"
        />
      </svg>

      <span class="inline text-neutral-400 text-sm ml-2 yellow-3">
        <%= post._count.likes %> <%= post._count.likes > 1 ? "likes" : "like"
        %></span
      >
    </p>
    <% } %>

    <div class="mt-8">
      <h4 class="text-neutral-400 font-semibold text-xl">Comments:</h4>

      <% if (locals.userId) { %> <%- include("./partials/commentForm", {postId:
      post.id}) %> <% } else { %>
      <p class="mt-3 text-neutral-500 text-lg">Login to post a new comment.</p>
      <% } %><% if (post.comments.length === 0) { %>
      <p class="mt-3 text-neutral-400 text-lg">No one has commented yet.</p>
      <% } else { %> <% post.comments.forEach(comment => { %>
      <div
        class="backdrop-blur bg-neutral-800 text-neutral-300 max-w-prose rounded-xl px-5 py-2 mt-4"
      >
        <p
          class="text-sm text-neutral-500 border-b-[1px] border-neutral-700 pb-1 mb-1"
        >
          <strong><%= comment.User.name %></strong> @
          <em><%= comment.createdAt.toDateString() %></em>
        </p>
        <p><span class="text-neutral-400">>></span> <%= comment.body %></p>

        <% if (locals.userId) { %>
        <form
          method="POST"
          action="/posts/<%= post.id %>/comments/<%= comment.id %>"
          class="comment-reply-form hidden mt-3"
        >
          <div class="max-w-md">
            <input name="parentCommentId" value="<%= comment.id %>" hidden />
            <textarea
              name="comment"
              class="w-full block h-[150px] p-3 mt-1 text-sm input-primary"
              placeholder="Reply to comment..."
              required
            ></textarea>
          </div>
          <button
            type="submit"
            class="btn-primary rounded-full px-3 py-1 text-sm mt-2"
          >
            Reply
          </button>
        </form>

        <p class="mt-2">
          <button
            class="reply-btn text-sm px-3 py-1 border-[1px] text-neutral-400 border-neutral-500 rounded-full hover:border-neutral-300 hover:text-neutral-300"
          >
            Reply
          </button>
        </p>
        <% } %> <% if (comment.Children.length > 0) { %>
        <p class="mt-3 text-sm italic text-neutral-500">Replies</p>
        <% comment.Children.forEach(commentReply => { %>
        <div class="ml-5 mt-4">
          <p
            class="text-sm border-b-[1px] border-neutral-700 text-neutral-500 pb-1 mb-1"
          >
            <strong><%= commentReply.User.name %></strong> @
            <em><%= commentReply.createdAt.toDateString() %></em>
          </p>
          <p>
            <span class="text-neutral-400">>></span> <%= commentReply.body %>
          </p>
        </div>
        <% }) %> <% } %>
      </div>
      <% }) %> <% } %>
    </div>
  </div>
</section>

<style>
  .post-content > * {
    margin-top: 20px;
    color: #d4d4d4;
  }
  .post-content > h1,
  .post-content > h2,
  .post-content > h3,
  .post-content > h4 {
    font-weight: bold;
    color: "#d1d5db";
  }
  .post-content > h1,
  .post-content > h2 {
    font-size: 32px;
  }

  .post-content > h3 {
    font-size: 26px;
  }
  .post-content > h4 {
    font-size: 24px;
  }

  .post-content > blockquote {
    font-weight: bold;
    font-style: italic;
    margin-left: 20px;
    position: relative;
    max-width: max-content;
  }
  .post-content > blockquote:before {
    content: '"';
    position: absolute;
    top: -5px;
    left: -10px;
  }
  .post-content > blockquote::after {
    content: '"';
    position: absolute;
    right: -7px;
    bottom: -40%;
  }

  .post-content ul {
    list-style-type: disc;
    margin-left: 10px;
    list-style-position: inside;
  }
  .post-content ol {
    list-style-type: decimal;
    margin-left: 10px;
    list-style-position: inside;
  }

  .like-btn-normal {
    background-color: transparent;
    border-color: #ff0;
    color: #ff0;
  }
  .like-btn-normal:hover {
    border-color: #fde047;
    color: #fde047;
  }

  .like-btn-liked {
    background-color: #ff0;
    border-color: #ff0;
    color: black;
  }
  .like-btn-liked:hover {
    background-color: #fde047;
  }

  .like-icon {
    fill: #ff0;
  }
  .like-btn-liked .like-icon {
    fill: black;
  }
</style>

<script>
  parsePost();

  const postLikeForm = document.getElementById("post-like-form");
  postLikeForm && postLikeForm.addEventListener("submit", likePost);

  async function likePost(e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
    const postId = formData.get("postId");
    const likeBtn = form.querySelector("button");
    likeBtn.disabled = true;

    try {
      const res = await fetch(`/user/posts/${postId}/like`, {
        method: "POST",
        body: JSON.stringify({ postId }),
        headers: {
          "Content-Type": "application/json",
        },
      });
      const json = await res.json();

      if (json.status !== "success") {
        // TODO: display error in UI
        console.error("couldn't like/dislike post, something went wrong...");
        return;
      }

      const likesCounterElm = document.getElementById("likes-counter");

      if (json.type === "add") {
        likeBtn.classList.remove("like-btn-normal");
        likeBtn.classList.add("like-btn-liked");

        const textElm = likeBtn.querySelector("span");
        textElm.innerHTML = "Liked";

        likesCounterElm.innerHTML = json.likes_counter;
      } else if (json.type === "remove") {
        likeBtn.classList.remove("like-btn-liked");
        likeBtn.classList.add("like-btn-normal");

        const textElm = likeBtn.querySelector("span");
        textElm.innerHTML = "Like Post";

        likesCounterElm.innerHTML = json.likes_counter;
      }

      // activate button again
      likeBtn.disabled = false;
    } catch (e) {
      console.error(e);
    }
  }

  function parsePost() {
    const paraNode = document.querySelector(".post-content");
    const outElms = [];

    const parser = new DOMParser();
    const doc = parser.parseFromString(paraNode.textContent, "text/html");
    const allNodes = doc.querySelectorAll("body > *");

    for (node of allNodes) {
      if (node.innerHTML !== "&nbsp;") outElms.push(node.outerHTML);
    }

    // clear content
    paraNode.innerHTML = " ";

    // populate again
    outElms.forEach((node) => (paraNode.innerHTML += node));
  }

  const replyBtn = document.querySelectorAll(".reply-btn");
  replyBtn &&
    replyBtn.forEach((btn) => btn.addEventListener("click", showCommentBox));

  function showCommentBox(e) {
    const btn = e.target;
    const form = btn.parentElement.previousElementSibling;

    btn.style.display = "none";
    form.style.display = "block";
  }
</script>
<%- include("./partials/footer") %>
