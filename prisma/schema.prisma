generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id          BigInt            @id @default(autoincrement())
  email       String            @unique
  name        String
  password    String
  bio         String
  photo       String?
  phone       String?
  active      Boolean           @default(false)
  verified    Boolean           @default(false)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  role        Role
  posts       Post[]
  sources     ReputalbeSource[]
  jobs        Job[]
  jobsApplied Application[]
}

model Job {
  id           BigInt        @id @default(autoincrement())
  title        String
  company      String
  location     String
  description  String
  workplace    WorkplaceType
  type         JobType
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  applications Application[]
  User         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       BigInt
}

model Application {
  id       BigInt  @id @default(autoincrement())
  job      Job     @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId    BigInt
  accepted Boolean @default(false)
  User     User    @relation(fields: [userId], references: [id])
  userId   BigInt
}

model Post {
  id        BigInt   @id @default(autoincrement())
  title     String
  body      String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ReputalbeSource {
  id     BigInt  @id @default(autoincrement())
  name   String
  url    String?
  User   User    @relation(fields: [userId], references: [id])
  userId BigInt
}

enum Role {
  USER
  COMPANY
  ADMIN
}

enum JobType {
  fullTime
  partTime
  contract
  temporary
  volunteer
  internship
  other
}

enum WorkplaceType {
  onSite
  hybrid
  remote
}
